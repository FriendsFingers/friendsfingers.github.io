(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{305:function(t,a,e){"use strict";e.r(a);var s={name:"MemberDetails",props:["account","token"],data:()=>({makingTransaction:!1,stakeAmount:"",unstakeAmount:"",trx:{hash:"",link:""}}),computed:{dapp:{get(){return this.$store.getters.dapp}}},methods:{stake(){this.$validator.validate("stakeAmount").then(t=>{if(t){if(!this.dapp.metamask.installed)return void this.makeToast("Some errors occurred","Please verify that you have MetaMask installed and unlocked.","danger");if(this.dapp.metamask.netId!==this.dapp.network.current.id)return void this.makeToast("You are on the wrong Network",`Please switch MetaMask on ${this.dapp.network.current.name}.`,"danger");try{this.makingTransaction=!0,this.dapp.instances.token.transferAndCall(this.dapp.instances.dao.address,this.dapp.web3.toWei(this.stakeAmount),{from:this.dapp.metamask.address,to:this.token.address},(t,a)=>{t?(console.log(t),this.makeToast("Some errors occurred","Maybe you rejected the transaction or you have MetaMask locked!","danger")):(this.trx.hash=a,this.trx.link=this.dapp.network.current.etherscanLink+"/tx/"+this.trx.hash),this.makingTransaction=!1})}catch(t){console.log(t),this.makeToast("Cannot connect","Please verify that you have MetaMask installed and unlocked.","danger")}}}).catch(t=>{console.log(t),this.makeToast("Some errors occurred",t,"danger"),this.makingTransaction=!1})},unstake(){this.$validator.validate("unstakeAmount").then(t=>{if(t){if(!this.dapp.metamask.installed)return void this.makeToast("Cannot connect","Please verify that you have MetaMask installed and unlocked.","danger");if(this.dapp.metamask.netId!==this.dapp.network.current.id)return void this.makeToast("You are on the wrong Network",`Please switch MetaMask on ${this.dapp.network.current.name}.`,"danger");try{this.makingTransaction=!0,this.dapp.instances.dao.unstake(this.dapp.web3.toWei(this.unstakeAmount),{from:this.dapp.metamask.address,to:this.dapp.instances.dao.address},(t,a)=>{t?(console.log(t),this.makeToast("Some errors occurred","Maybe you rejected the transaction or you have MetaMask locked!","danger")):(this.trx.hash=a,this.trx.link=this.dapp.network.current.etherscanLink+"/tx/"+this.trx.hash),this.makingTransaction=!1})}catch(t){console.log(t),this.makeToast("Cannot connect","Please verify that you have MetaMask installed and unlocked.","danger")}}}).catch(t=>{console.log(t),this.makeToast("Some errors occurred",t,"danger"),this.makingTransaction=!1})}}},n=e(19),r=Object(n.a)(s,(function(){var t=this,a=t._self._c;return a("b-row",[t.trx.hash?a("b-col",{staticClass:"mb-2",attrs:{md:"12"}},[a("b-alert",{staticClass:"mt-3",attrs:{show:"",variant:"success"}},[t._v("\n            Last transaction:\n            "),a("b-link",{attrs:{href:t.trx.link,target:"_blank"}},[t._v(t._s(t.trx.hash))])],1)],1):t._e(),t._v(" "),a("b-col",{staticClass:"mb-4",attrs:{md:"8"}},[a("b-card",{staticClass:"text-center",attrs:{"no-body":""}},[a("b-card-body",[a("ui--member-image",{attrs:{member:t.account.member}})],1)],1)],1),t._v(" "),a("b-col",{staticClass:"mb-4",attrs:{md:"4"}},[a("b-card",{attrs:{"no-body":""}},[a("b-card-header",[t._v("\n                Member #"+t._s(t.account.member.id)+"\n\n                "),a("div",{staticClass:"float-right"},[t.account.member.approved?a("b-badge",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover",modifiers:{hover:!0}}],staticClass:"p-1",attrs:{title:"Verified",variant:"success",pill:""}},[a("font-awesome-icon",{attrs:{icon:"check-circle"}})],1):t._e()],1)]),t._v(" "),a("b-list-group",{attrs:{flush:""}},[a("b-list-group-item",[t._v("\n                    Address:\n                    "),a("b-link",{attrs:{href:`${t.dapp.network.current.etherscanLink}/address/${t.account.member.address}`,target:"_blank"}},[t._v("\n                        "+t._s(t._f("truncate")(t.account.member.address,10))+"\n                    ")])],1),t._v(" "),a("b-list-group-item",[t._v("\n                    Balance: "),a("b",[t._v(t._s(t.account.tokenBalance)+" "+t._s(t.token.symbol))])]),t._v(" "),a("b-list-group-item",[t._v("\n                    Staked: "),a("b",[t._v(t._s(t.account.member.stakedTokens)+" "+t._s(t.token.symbol))])]),t._v(" "),a("b-list-group-item",[t._v("\n                    Used: "),a("b",[t._v(t._s(t.account.member.usedTokens)+" "+t._s(t.token.symbol))])])],1),t._v(" "),a("b-card-footer",[a("small",[t._v("Since: "+t._s(t._f("formatLocaleDate")(t.account.member.creationDate)))])])],1),t._v(" "),t.account.member.address===t.dapp.metamask.address?a("b-card",{staticClass:"mt-4",attrs:{header:"Stake "+t.token.symbol}},[a("b-form",{on:{submit:function(a){return a.preventDefault(),t.stake.apply(null,arguments)}}},[a("b-input-group",[a("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:1,max_value:t.account.tokenBalance},expression:"{ required: true, numeric: true, min_value: 1, max_value: account.tokenBalance }"}],class:{"is-invalid":t.errors.has("stakeAmount")},attrs:{id:"stakeAmount",name:"stakeAmount",disabled:t.makingTransaction,"data-vv-as":"stake amount"},model:{value:t.stakeAmount,callback:function(a){t.stakeAmount="string"==typeof a?a.trim():a},expression:"stakeAmount"}}),t._v(" "),a("b-input-group-append",[a("b-button",{attrs:{disabled:t.makingTransaction,type:"submit",variant:"primary"}},[t._v("Stake")])],1)],1),t._v(" "),a("small",{directives:[{name:"show",rawName:"v-show",value:t.errors.has("stakeAmount"),expression:"errors.has('stakeAmount')"}],staticClass:"text-danger"},[t._v("\n                    "+t._s(t.errors.first("stakeAmount"))+"\n                ")])],1)],1):t._e(),t._v(" "),t.account.member.address===t.dapp.metamask.address?a("b-card",{staticClass:"mt-4",attrs:{header:"Unstake "+t.token.symbol}},[a("b-form",{on:{submit:function(a){return a.preventDefault(),t.unstake.apply(null,arguments)}}},[a("b-input-group",[a("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:1,max_value:t.account.member.stakedTokens},expression:"{ required: true, numeric: true, min_value: 1, max_value: account.member.stakedTokens }"}],class:{"is-invalid":t.errors.has("unstakeAmount")},attrs:{id:"unstakeAmount",name:"unstakeAmount",disabled:t.makingTransaction,"data-vv-as":"unstake amount"},model:{value:t.unstakeAmount,callback:function(a){t.unstakeAmount="string"==typeof a?a.trim():a},expression:"unstakeAmount"}}),t._v(" "),a("b-input-group-append",[a("b-button",{attrs:{disabled:t.makingTransaction,type:"submit",variant:"primary"}},[t._v("Unstake")])],1)],1),t._v(" "),a("small",{directives:[{name:"show",rawName:"v-show",value:t.errors.has("unstakeAmount"),expression:"errors.has('unstakeAmount')"}],staticClass:"text-danger"},[t._v("\n                    "+t._s(t.errors.first("unstakeAmount"))+"\n                ")])],1)],1):t._e()],1),t._v(" "),a("b-col",{attrs:{md:"12"}},[a("b-card",{staticClass:"mb-4"},[a("Disqus",{attrs:{shortname:"friendsfingers",identifier:"MEMBER_"+t.account.member.address}})],1)],1)],1)}),[],!1,null,null,null);a.default=r.exports}}]);